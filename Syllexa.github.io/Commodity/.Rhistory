Caledar<- dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Economic Calendar.R")
Caledar()
Function<-dget(file = "https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/GoogFin.R")
USD_INR<- Function(ticker = "USDINR",exchange = "")
View(USD_INR)
Time<- proc.time()
Caledar<- dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Economic Calendar.R")
Weekly_Performer<- dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Weekly Performer.R")
Currency<-dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Currency.R")
Commodity<-dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Commodities.R")
Market<- dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Market.R")
Caledar()
Weekly_Performer()
Currency()
Commodity()
Market()
proc.time() -Time
library(XML) #Loading XML package
library(gdata)
setwd("C:\\Users\\Vishu\\Documents\\GitHub\\Syllexa\\Syllexa.github.io\\Commodity")
url<-"http://www.goldpriceindia.com/gold-price-history.php"
url1<-"http://www.goldpriceindia.com/"
doc <- htmlParse(url) #Parses an HTML file and form a readable R file
links <- xpathSApply(doc, "//a/@href")
Links<-links[grep("2014",links,ignore.case = T)]
Links<- Links[c(-1,-2)]
Month_URL<- paste(url1,Links,sep = "")
Gold_Date<- list()
Gold_Data<- list()
for(a in seq(Month_URL)){
url<- Month_URL[a]
doc <- readLines(url)
Month_Data<-list()
Month_Date<- list()
for(i in seq(length(grep("his-dt-G-hd",doc)))){
Month_Date[i]<-strsplit(doc[grep("his-dt-G-hd",doc)],"his-dt-G-hd")[[i]][2]
Month_Date[i]<-gsub("\" colspan=\"4\">|</td>","",Month_Date[i])}
for(i in seq(length(grep("his-eod-2",doc)))){
Month_Data[i]<- strsplit(doc[grep("his-eod-2",doc)],"his-eod-2")[[i]][2]
Month_Data[i]<- gsub("\\\">|</td>","",Month_Data[i])}
if(a==1){Gold_Date=Month_Date}
else(Gold_Date<- c(Gold_Date,Month_Date))
if(a==1){Gold_Data=Month_Data}
else(Gold_Data<- c(Gold_Data,Month_Data))
}
Gold_Data<- unlist(Gold_Data)
Gold_Date<- unlist(Gold_Date)
Gold_Date<- as.Date(gsub("Gold Price on ","",Gold_Date),"%d %B %Y")
Gold_Data<- as.numeric(gsub(",","",Gold_Data))
Gold<- as.data.frame(x = Gold_Date)
colnames(Gold)<- "Date"
Gold$Data<- Gold_Data
Oil<- read.xls("http://www.eia.gov/dnav/pet/xls/PET_PRI_FUT_S1_D.xls",sheet = 2,pattern = "Date")
Oil$Date<- as.Date(as.character(Oil$Date),format = "%b %d, %Y")
colnames(Oil)[2]<- "Prices"
Oil<- subset(Oil,Oil$Prices!=".")
Oil<- Oil[format(Oil$Date,"%Y")==format(Sys.Date(),"%Y"),]
Oil<-Oil[,c(1,2)]
Gold<- Gold[order(Gold$Date),]
Gold<- Gold[Gold$Date %in% Oil$Date,]
Commodity<- cbind(Gold,Oil)
Commodity<- Commodity[,!(duplicated(colnames(Commodity)))]
colnames(Commodity) <- c("Date","Gold","Oil")
Links<-links[grep("2015",links,ignore.case = T)]
Links<- Links[c(-1,-2)]
Month_URL<- paste(url1,Links,sep = "")
Gold_Date<- list()
Gold_Data<- list()
for(a in seq(Month_URL)){
url<- Month_URL[a]
doc <- readLines(url)
Month_Data<-list()
Month_Date<- list()
for(i in seq(length(grep("his-dt-G-hd",doc)))){
Month_Date[i]<-strsplit(doc[grep("his-dt-G-hd",doc)],"his-dt-G-hd")[[i]][2]
Month_Date[i]<-gsub("\" colspan=\"4\">|</td>","",Month_Date[i])}
for(i in seq(length(grep("his-eod-2",doc)))){
Month_Data[i]<- strsplit(doc[grep("his-eod-2",doc)],"his-eod-2")[[i]][2]
Month_Data[i]<- gsub("\\\">|</td>","",Month_Data[i])}
if(a==1){Gold_Date=Month_Date}
else(Gold_Date<- c(Gold_Date,Month_Date))
if(a==1){Gold_Data=Month_Data}
else(Gold_Data<- c(Gold_Data,Month_Data))
}
links
links[grep("2014",links,ignore.case = T)]
Links<-links[grep("2014",links,ignore.case = T)]
Links[c(-1,-2)]
Links<- Links[c(-1,-2)]
paste(url1,Links,sep = "")
Month_URL<- paste(url1,Links,sep = "")
list()
Gold_Date<- list()
Gold_Data<- list()
Month_URL[a]
url<- Month_URL[a]
readLines(url)
doc <- readLines(url)
doc <- readLines(url)
Month_Data<-list()
Month_Date<- list()
seq(length(grep("his-dt-G-hd",doc)))
strsplit(doc[grep("his-dt-G-hd",doc)],"his-dt-G-hd")[[i]][2]
i
Function<-dget(file = "https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/GoogFin.R")
USD_INR<- Function(ticker = "USDINR",exchange = "",TimeFrame = "5Y")
colnames(USD_INR)[5]<- "USD_INR"
Pound_INR<- Function(ticker = "GBPINR",exchange = "",TimeFrame = "5Y")
colnames(Pound_INR)[5]<-"Pound_INR"
Euro_INR<-Function(ticker = "EURINR",exchange = "",TimeFrame = "5Y")
colnames(Euro_INR)[5]<-"Euro_INR"
Currency<- cbind(USD_INR,Pound_INR,Euro_INR)
Currency<- Currency[,c("Date","USD_INR","Pound_INR","Euro_INR")]
Currency$USD_INR<- round(Currency$USD_INR,2)
round(Currency$Pound_INR,2)
Currency$Pound_INR<- round(Currency$Pound_INR,2)
Currency$Euro_INR<- round(Currency$Euro_INR,2)
Time<- proc.time()
Caledar<- dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Economic Calendar.R")
Weekly_Performer<- dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Weekly Performer.R")
Currency<-dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Currency.R")
Commodity<-dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Commodities.R")
Market<- dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Market.R")
Caledar()
Weekly_Performer()
Currency()
Commodity()
Market()
proc.time() -Time
ticker = ".NSEI"
exchange = "NSE"
interval = 86400
TimeFrame="1M"
url = paste("http://www.google.com/finance/getprices?q", paste(ticker, "x", sep = "&"), paste(exchange, "i", sep = "&"), paste(interval, "p", sep = "&"),
paste(TimeFrame, "f", sep = "&"), "d,o,h,l,c,v", sep = "=")
print(url)
stock = readLines(url)
colnames_row = strsplit(stock[5], split = ",")
columns = c(gsub(x = colnames_row[[1]][1], pattern = "COLUMNS=", replacement = ""), colnames_row[[1]][2], colnames_row[[1]][3],
colnames_row[[1]][4], colnames_row[[1]][5], colnames_row[[1]][6])
stock_prices = data.frame(matrix(data = 0, nrow = 0, ncol = length(columns)))
colnames(x = stock_prices) = columns
rows = length(stock)
for(i in 8:rows){
elements = strsplit(x = stock[i], split = ",")
stock_prices[i, 1] = elements[[1]][1]
stock_prices[i, 2] = elements[[1]][2]
stock_prices[i, 3] = elements[[1]][3]
stock_prices[i, 4] = elements[[1]][4]
stock_prices[i, 5] = elements[[1]][5]
stock_prices[i, 6] = elements[[1]][6]
}
stock_prices = stock_prices[-(1:7),]
View(stock_prices)
new_dates = grep(pattern = "a", x = stock_prices$DATE, value = F)
new_dates_values = grep(pattern = "a", x = stock_prices$DATE, value = T)
dates_list = as.POSIXct(as.numeric(gsub(pattern = "a", replacement = "", x = new_dates_values)), tz = "", origin = "1970-01-01")
stock_prices$DATE_two = 0
stock_prices$DATE_two[1] = stock_prices$DATE[new_dates[1]]
if(length(new_dates) >= 2){
for(i in 2:length(new_dates)){
stock_prices$DATE_two[(new_dates[i-1]) : (new_dates[i] - 1)] = new_dates_values[i - 1]
}}
stock_prices$DATE_two[(new_dates[which.max(as.numeric(new_dates))]) : (nrow(stock_prices))] = new_dates_values[which.max(as.numeric(new_dates))]
stock_prices$DATE_two = as.numeric(gsub(pattern = "a", replacement = "",x = stock_prices$DATE_two))
stock_prices$DATE = as.numeric(gsub(pattern = "a", replacement = "",x = stock_prices$DATE))
stock_prices$Date_Time = 0
for(i in 1:nrow(stock_prices)){
if(stock_prices$DATE[i] == stock_prices$DATE_two[i]){
stock_prices$Date_Time[i] = stock_prices$DATE_two[i]
}else{
stock_prices$Date_Time[i] = stock_prices$DATE_two[i] + (stock_prices$DATE[i] * interval)
}
}
stock_prices$Date_Time = as.POSIXct(x = stock_prices$Date_Time, tz = "", origin = "1970-01-01")
stock_prices$DATE = stock_prices$Date_Time
stock_prices = stock_prices[, -c(7,8)]
stock_prices$DATE = as.POSIXct(as.numeric(stock_prices$DATE), tz = "", origin = "1970-01-01")
if(interval >= 86400){
stock_prices$DATE = as.Date(x = stock_prices$DATE, format = "%Y-%m-%d")
}else{
stock_prices$DATE = as.POSIXct(as.numeric(stock_prices$DATE), tz = "", origin = "1970-01-01")
}
Stock<-dget(file = "https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/GoogFin.R")
Nifty<- Stock(TimeFrame = "5Y")
Nifty$Name<-"Nifty"
colnames(Nifty)[5]<-"Nifty"
Sensex<- Stock(ticker = "SENSEX",exchange = "INDEXBOM",TimeFrame = "5Y")
colnames(Sensex)[5]<- "Sensex"
Data<- cbind(Nifty,Sensex)
Data<- Data[,c("Date","Nifty","Sensex")]
View(Sensex)
View(Nifty)
Sensex<- subset(Sensex,Sensex$Date==Nifty$Date)
Sensex$Date
Nifty$Date
Nifty<- Stock(TimeFrame = "5Y")
Nifty$Name<-"Nifty"
colnames(Nifty)[5]<-"Nifty"
Sensex<- Stock(ticker = "SENSEX",exchange = "INDEXBOM",TimeFrame = "5Y")
colnames(Sensex)[5]<- "Sensex"
which(Nifty$Date!=Sensex$Date)
which(Nifty$Date!=Sensex$Date)
Nifty$Date[which(Nifty$Date!=Sensex$Date)]
Data<- cbind(Nifty,Sensex)
str(Nifty$Date)
str(Sensex$Date)
Nifty<- Nifty[Nifty$Date %in% Sensex$Date,]
Sensex<- Sensex[Sensex$Date %in% Nifty$Date,]
Data<- cbind(Nifty,Sensex)
Data<- Data[,c("Date","Nifty","Sensex")]
Market_Graphing<- function(){
Stock<-dget(file = "https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/GoogFin.R")
Nifty<- Stock(TimeFrame = "5Y")
Nifty$Name<-"Nifty"
colnames(Nifty)[5]<-"Nifty"
Sensex<- Stock(ticker = "SENSEX",exchange = "INDEXBOM",TimeFrame = "5Y")
colnames(Sensex)[5]<- "Sensex"
Nifty<- Nifty[Nifty$Date %in% Sensex$Date,]
Sensex<- Sensex[Sensex$Date %in% Nifty$Date,]
Data<- cbind(Nifty,Sensex)
Data<- Data[,c("Date","Nifty","Sensex")]
write.csv(Data,"C:\\Users\\Vishu\\Documents\\GitHub\\Syllexa\\Syllexa.github.io\\Market-Movement\\data.csv",row.names = F)
}
Market_Graphing()
Market_Graphing<- function(){
library(dygraphs)
library(xts)
library(TTR)
library(htmltools)
Stock<-dget(file = "C:\\Users\\Vishu\\OneDrive\\Data Scraping\\NSE-BSE Historical Prices\\GoogFin.R")
Nifty<- Stock(TimeFrame = "1Y")
Nifty$Change<- ROC(Nifty$Close)
Nifty$Name<-"Nifty"
Sensex<- Stock(ticker = "SENSEX",exchange = "INDEXBOM",TimeFrame = "1Y")
Sensex$Return<- ROC(Sensex$Close)
colnames(Sensex)[5]<- "Sensex_Close"
Data<- cbind(Nifty,Sensex)
Data<- Data[,c("Date","Close","Sensex_Close")]
Data_xts<- xts(Data,order.by = Data$Date)
Data_xts$Date<-NULL
Graph<-dygraph(data = Data_xts, main = "Market Performance") %>%
dyAxis(name = "y",label = "Nifty Data") %>%
dyAxis(name = "y2",label = "Sesex Data",independentTicks = TRUE) %>%
dySeries("Sensex_Close",label = "Sensex",axis = "y2") %>%
dySeries("Close",label = "Nifty",axis = "y") %>%
dyCSS("C:\\Users\\Vishu\\OneDrive\\Weekly Digest\\HTML\\Web Files\\Market Performance.css") %>%
dyEvent(date = "2015-08-24", "Market Crash", labelLoc = "bottom") %>%
dyEvent(date = "2015-08-11", "Yuan Devalue", labelLoc = "bottom") %>%
dyRangeSelector(dateWindow = c(seq(Sys.Date(), length = 2, by = "-3 months")[2], Sys.Date()))
save_html(Graph,"C:\\Users\\Vishu\\OneDrive\\Weekly Digest\\HTML\\Web Files\\Market Performance.html")
}
library(dygraphs)
library(xts)
library(TTR)
library(htmltools)
Stock<-dget(file = "C:\\Users\\Vishu\\OneDrive\\Data Scraping\\NSE-BSE Historical Prices\\GoogFin.R")
Nifty<- Stock(TimeFrame = "1Y")
Nifty$Change<- ROC(Nifty$Close)
Nifty$Name<-"Nifty"
Sensex<- Stock(ticker = "SENSEX",exchange = "INDEXBOM",TimeFrame = "1Y")
Sensex$Return<- ROC(Sensex$Close)
colnames(Sensex)[5]<- "Sensex_Close"
Data<- cbind(Nifty,Sensex)
Data<- Data[,c("Date","Close","Sensex_Close")]
Data_xts<- xts(Data,order.by = Data$Date)
Data_xts$Date<-NULL
Graph<-dygraph(data = Data_xts, main = "Market Performance") %>%
dyAxis(name = "y",label = "Nifty Data") %>%
dyAxis(name = "y2",label = "Sesex Data",independentTicks = TRUE) %>%
dySeries("Sensex_Close",label = "Sensex",axis = "y2") %>%
dySeries("Close",label = "Nifty",axis = "y") %>%
dyCSS("C:\\Users\\Vishu\\OneDrive\\Weekly Digest\\HTML\\Web Files\\Market Performance.css") %>%
dyEvent(date = "2015-08-24", "Market Crash", labelLoc = "bottom") %>%
dyEvent(date = "2015-08-11", "Yuan Devalue", labelLoc = "bottom") %>%
dyRangeSelector(dateWindow = c(seq(Sys.Date(), length = 2, by = "-3 months")[2], Sys.Date()))
Stock<-dget(file = "https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/GoogFin.R")
Nifty<- Stock(TimeFrame = "5Y")
Nifty$Name<-"Nifty"
colnames(Nifty)[5]<-"Nifty"
Sensex<- Stock(ticker = "SENSEX",exchange = "INDEXBOM",TimeFrame = "5Y")
colnames(Sensex)[5]<- "Sensex"
Nifty<- Nifty[Nifty$Date %in% Sensex$Date,]
Sensex<- Sensex[Sensex$Date %in% Nifty$Date,]
Data<- cbind(Nifty,Sensex)
Data<- Data[,c("Date","Nifty","Sensex")]
round(Data$Nifty)
Data$Nifty<- round(Data$Nifty)
Data$Sensex<- round(Data$Sensex)
write.csv(Data,"C:\\Users\\Vishu\\Documents\\GitHub\\Syllexa\\Syllexa.github.io\\Market-Movement\\data.csv",row.names = F)
write.csv(Data,"C:\\Users\\Vishu\\Documents\\GitHub\\Syllexa\\Syllexa.github.io\\Market-Movement\\data.csv",row.names = F)
library(XML) #Loading XML package
library(gdata)
setwd("C:\\Users\\Vishu\\Documents\\GitHub\\Syllexa\\Syllexa.github.io\\Commodity")
url<-"http://www.goldpriceindia.com/gold-price-history.php"
url1<-"http://www.goldpriceindia.com/"
doc <- htmlParse(url) #Parses an HTML file and form a readable R file
links <- xpathSApply(doc, "//a/@href")
Links<-links[grep("2014",links,ignore.case = T)]
Links<- Links[c(-1,-2)]
Month_URL<- paste(url1,Links,sep = "")
Gold_Date<- list()
Gold_Data<- list()
for(a in seq(Month_URL)){
url<- Month_URL[a]
doc <- readLines(url)
Month_Data<-list()
Month_Date<- list()
for(i in seq(length(grep("his-dt-G-hd",doc)))){
Month_Date[i]<-strsplit(doc[grep("his-dt-G-hd",doc)],"his-dt-G-hd")[[i]][2]
Month_Date[i]<-gsub("\" colspan=\"4\">|</td>","",Month_Date[i])}
for(i in seq(length(grep("his-eod-2",doc)))){
Month_Data[i]<- strsplit(doc[grep("his-eod-2",doc)],"his-eod-2")[[i]][2]
Month_Data[i]<- gsub("\\\">|</td>","",Month_Data[i])}
if(a==1){Gold_Date=Month_Date}
else(Gold_Date<- c(Gold_Date,Month_Date))
if(a==1){Gold_Data=Month_Data}
else(Gold_Data<- c(Gold_Data,Month_Data))
}
Gold_Data<- unlist(Gold_Data)
Gold_Date<- unlist(Gold_Date)
Gold_Date<- as.Date(gsub("Gold Price on ","",Gold_Date),"%d %B %Y")
Gold_Data<- as.numeric(gsub(",","",Gold_Data))
Gold<- as.data.frame(x = Gold_Date)
colnames(Gold)<- "Date"
Gold$Data<- Gold_Data
Oil<- read.xls("http://www.eia.gov/dnav/pet/xls/PET_PRI_FUT_S1_D.xls",sheet = 2,pattern = "Date")
Oil$Date<- as.Date(as.character(Oil$Date),format = "%b %d, %Y")
colnames(Oil)[2]<- "Prices"
Oil<- subset(Oil,Oil$Prices!=".")
Oil<- Oil[format(Oil$Date,"%Y")==format(Sys.Date(),"%Y"),]
Oil<-Oil[,c(1,2)]
Gold<- Gold[order(Gold$Date),]
Gold<- Gold[Gold$Date %in% Oil$Date,]
Commodity<- cbind(Gold,Oil)
Commodity<- Commodity[,!(duplicated(colnames(Commodity)))]
colnames(Commodity) <- c("Date","Gold","Oil")
for(a in seq(Month_URL)){
url<- Month_URL[a]
doc <- readLines(url)
Month_Data<-list()
Month_Date<- list()
for(i in seq(length(grep("his-dt-G-hd",doc)))){
Month_Date[i]<-strsplit(doc[grep("his-dt-G-hd",doc)],"his-dt-G-hd")[[i]][2]
Month_Date[i]<-gsub("\" colspan=\"4\">|</td>","",Month_Date[i])}
for(i in seq(length(grep("his-eod-2",doc)))){
Month_Data[i]<- strsplit(doc[grep("his-eod-2",doc)],"his-eod-2")[[i]][2]
Month_Data[i]<- gsub("\\\">|</td>","",Month_Data[i])}
if(a==1){Gold_Date=Month_Date}
else(Gold_Date<- c(Gold_Date,Month_Date))
if(a==1){Gold_Data=Month_Data}
else(Gold_Data<- c(Gold_Data,Month_Data))
}
Gold_Data<- unlist(Gold_Data)
Gold_Date<- unlist(Gold_Date)
Gold_Date<- as.Date(gsub("Gold Price on ","",Gold_Date),"%d %B %Y")
Gold_Data<- as.numeric(gsub(",","",Gold_Data))
Gold<- as.data.frame(x = Gold_Date)
colnames(Gold)<- "Date"
Gold$Data<- Gold_Data
Gold<- Gold[order(Gold$Date),]
Gold<- Gold[Gold$Date %in% Oil$Date,]
View(Oil)
Time<- proc.time()
Caledar<- dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Economic Calendar.R")
Weekly_Performer<- dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Weekly Performer.R")
Currency<-dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Currency.R")
Commodity<-dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Commodities.R")
Market<- dget("https://rawgit.com/vishukapoor/Syllexa/gh-pages/Syllexa.github.io/R-Scripts/Market.R")
Caledar()
Weekly_Performer()
Currency()
Commodity()
Market()
proc.time() -Time
rm(list=ls())
